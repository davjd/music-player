David Medina

05-04-17:
* Figure out the platform to use.
* Either Android studio or Qt creator.
* Figure out which platform is best.

05-05-17:
* Find the libraries that I will need
* Find out how to read audio files.
* Design the basic layout of the music player.

05-07-17:
* I've decided on Qt creator.
* Look at how to read audio files on Qt.
* Find out whether additional libraries will be needed.
---> reading audio files is possible without any additional libraries
---- but in order to get metadata, I'll need another library
---- , since Qt loads metadata only after loading the audio files.

05-08-17:
* Find out which metadata library to use
---> possible libs: Taglib, Symbian API, or just Qt's native class.
* Began creating the initial class for a 'Song'.
* Created a main file to test the audio class.
* Reading audio is simple with Qt.
* Need to start designing how classes will interact with each other.
* Began exploring TagLib.
---> Still debating whether:
---- to use Qt's metadata classes, or use TagLib.
---- TagLib seems like a better option
---- but requires more work and cmake.

05-09-17:
* I've decided to use TagLib as the library for metadata.
* I have also figured out how to link it with a simple program.
* Now I need to find out how to link it using Qt creator
-- but it should be easy!!
* Afterwards, I'll begin creating the initial classes for audio files.
* I've also decided to use Qt Media player to load the files.
* A feature that I'm planning to add later is audio visualization
-- but it doesn't seem easy so i dont know yet.

5-10-17:
* I got Qt to recognize the path of TagLibs'library,
-- but it's still not working.
* I may have to go back to using Qt's own metadata library for now.
* A feature I want to add is to have an audio visualizer 
-- but that'll require more work.
-- so I'll do it if I have time at the end.

05-11-17:
* I've learned how to link taglib with Qt.
* Now I need to look at the documentation.
* I need to learn the methods that I'll need for the metadata.
* I've also created a simple test to run FileRef class to test taglib.

05-12-17:
* I've created the first class, called "Song", which contains all information of the song.
* from that class, it'll be connected to a mediaplayer, which will play the song.
* the class will have methods to get metadata.
* I've also found out how to use the absolute path file instead of a local file.


05-13-17:
* The song class seems to be finished.
-- it's able to retrieve metadata
-- it uses the audio's filepath as a parameter.
-- it can be connected to QMediaPlayer to be played.
* I've created the initial scanner for audio files.
* I'm still unsure how I want input the paths of music
-- I could just manually search through all the user's files.
----> this would take a lot of computer power and would slow down performance.
-- I could ask the user to input the possible paths for music files 
----> this would be the easiest but least pleasant way for the user.
-- I could create a simple GUI to ask the user for possible paths.
----> this would be the hardest but would make it easier for the user.
* I'm planning to design the first screen that would display the avaliable music by the end of this week.
* I was able to test my file scanner
-- by using QMediaPlaylist, which takes in multiple media contents 
-- to create  a playlist. I used the files scanned to create individual media contents.
-- then i set the playlist to the player, and it's working for now.
* I'm still deciding how I'm going to design the player class
-- or maybe i'll just use Qt's player class, but it has its limits.

05-14-17:
* I've began implementing the main screen
-- where the next/previous/play/pause buttons will appear.
-- the buttons seemed to be functional as of now.
-- I want to make it look prettier
-- ,which will be difficult and take sometime.
* I also have to connect the metadata with the screen
-- by displaying the title of the song and artist.
* I've also finished the initial design of the player class.
* I'm still trying to find alternatives to having a global variable
-- since they're so bad.

05-15-17:
* So i've stumbled upon a really nasty bug.
* I tried fixing the casting error I initially had, by creating a member variable
-- to keep track of the old subclass type.
* but now I'm having errors with the playlist that's used for the QMediaPlayer.
* This bug affects the functionality of every button
-- so it's essential that I fix it..

05-16-17:
* I'm almost finished with the buttons.
* so far I have the following buttons working:
    - play
    - pause
    - repeat
* I'm having some trouble with the shuffle button
    * it's working, but it messes with the current index of the playlist.
    -- since the metadata relies on the current index
* I'm planning on abandoning the QMediaPlaylist
-- mainly because it has limited functionalities.
-- I also don't have fully control of the class.
-- if i create my own playlist class, I'll be more comfortable working with it.

05-17-17:
* I modified some of the buttons and their signals.
* I tried working on creating a progress bar of the current song.
-- but i'm having trouble with getting the duration of the song.
-- because it requires that the media has been loaded to the player.
-- and this takes some time before it actually happens.
-- so i'll have to find some other signal to work with.

05-18-17:
* I got the progress bar working.
-- as the song plays, the bar shows how much is left until the song is over.
-- one feature I want to add is giving the user the ability to select the position of the song.
-- I don't know how though.
* I also began investigating how I could possibly ditch Qt's playlist class.
-- since it doesn't have many functionalities.
-- I'm planning to create the class tomorrow and finish it over the weekend.
* The cover art is still not working.
-- the reason why it's becoming such a big issue, is because not all audio formats support it.
-- So I need to find a way on how to find out if a song does support it.

05-19-17:
* I've started looking at the signals needed to extend the functionalities of my current music player.
-- there are two signals that seem to suffice.
-- hoepfully im right.
* I will start editing the class over the weekend.
* I've also started looking at possible ways to retrieve the cover art.

05-21-17:
* I've began editing the music player class.
-- the functionalities i'm hoping to extend are:
---> shuffle: either ON or OFF.
---> repeat: either ON on an individual song or playlist, or OFF.
* I'm hoping to finish the class by tuesday, maybe even tmrw.


05-22-17:
* I started implementing certain methods for the playback functionalities.
-- including: repeat, shuffle, both, or neither.
* I also created a playlist class, but I don't think i'll use it.
* I still need to do the cover art.

05-23-17:
* I started re-editing the directory iterator, so it'll support creating 'playlists' for each folder.
-- kinda having trouble with recursive folders.
-- since they might have depths greather than two.
-- I'll try finishing it tonight.
* When I'm done with the iterator, I can start testing the MusicPlayer playlist functionalities.

05-24-17:
* I apparantly have a deadlock
-- i think it's my application thats crashing my laptop.
-- So i'll need to insure that everything is thread safe.
* I continued working on the directory scanner.
-- I think i'll be finished with it tonight(if i work on it later.)
* hopefully the deadlock isn't a big problem.

05-25-17:
* So the thing about the deadlock...
-- it seems it wasnt my application that was causing the freeze.
-- after updating my OS, my laptop no longer freezes.
-- so i can now focus on other features of music player instead of it being thread-safety.
* I was able to get the audio file scanner working.
-- I haven't fully tested it though.

05-26-17:
* I started fixing the signals for the music player.
-- signals include:
    -- when a song has ended.
    -- when the user clicks the next button.
    -- when the user clicks the previous button.
    -- when the metadata needs to be extracted.
* I've also fixed the index error i previously had.

05-27-17:
* So I'm still fixing and editing the methods to switch between songs.
-- I'm mainly having issues because there's a lot questions that are arising
    -- most are design questions on how i want the music player to interact and respond.
    -- which don't seem to have wrong or correct answers, because it really depends
    -- on how I want the music player to switch songs.
* I have also begun looking at how I will extract the cover art from songs.
-- But i'll implement when I'm 100% sure that switching betweens songs is perfect and smooth.

05-29-17:
* I think I'm done with the playback functionality.
* I have begun focusing on the front-end a little.
* I've began creating and designing the second screen that I'll need.
* I am still figuring out how I can transition from one screen to another in Qt.

05-30-17:
* I think I have the screens working.
-- I've found out how to connect various screens together.
-- I dont know if it's the best way though.
* I've also started designing the first screen where the songs are loaded.

05-31-17:
* I have the Music Player Screen working, but I'm
-- having trouble styling it.
-- for some reason I can only style the main window.
* I have also finished testing the playback functionalities.
-- they seem to be working for now.
* I'm still debating whether I want to add more features, like:
-- scraping lyrics
-- audio visualizer
-- editing song's metadata.

06-02-17:
* I'm still trying to figure out how to get the background color from a stylesheet.
-- I think I'll have to parse the stylesheet
-- but that'll be too complicated, so I'm trying to figure out different ways of
-- changing the background color of a widget.

06-05-17:
* I've created new widgets that I think i'll be needing in the future, including:
-- a group label
-- a rotatable button

06-06-17:
* I'm still having trouble with the widget I'm trying to make.
-- Mainly because I don't know how to style the widget correctly
-- I'm thinking of using Qt designer to create the widget, but I don't know if it's good practice.


