David Medina

05-04-17:
* Figure out the platform to use.
* Either Android studio or Qt creator.
* Figure out which platform is best.

05-05-17:
* Find the libraries that I will need
* Find out how to read audio files.
* Design the basic layout of the music player.

05-07-17:
* I've decided on Qt creator.
* Look at how to read audio files on Qt.
* Find out whether additional libraries will be needed.

---> reading audio files is possible without any additional libraries
---- but in order to get metadata, I'll need another library
---- , since Qt loads metadata only after loading the audio files.

05-08-17:
* Find out which metadata library to use
---> possible libs: Taglib, Symbian API, or just Qt's native class.
* Began creating the initial class for a 'Song'.
* Created a main file to test the audio class.
* Reading audio is simple with Qt.
* Need to start designing how classes will interact with each other.
* Began exploring TagLib.
---> Still debating whether:
---- to use Qt's metadata classes, or use TagLib.
---- TagLib seems like a better option
---- but requires more work and cmake.

05-09-17:
* I've decided to use TagLib as the library for metadata.
* I have also figured out how to link it with a simple program.
* Now I need to find out how to link it using Qt creator
-- but it should be easy!!
* Afterwards, I'll begin creating the initial classes for audio files.
* I've also decided to use Qt Media player to load the files.
* A feature that I'm planning to add later is audio visualization
-- but it doesn't seem easy so i dont know yet.
5-10-17:
* I got Qt to recognize the path of TagLibs'library,
-- but it's still not working.
* I may have to go back to using Qt's own metadata library for now.
* A feature I want to add is to have an audio visualizer 
-- but that'll require more work.
-- so I'll do it if I have time at the end.
05-11-17:
* I've learned how to link taglib with Qt.
* Now I need to look at the documentation.
* I need to learn the methods that I'll need for the metadata.
* I've also created a simple test to run FileRef class to test taglib.

05-12-17:
* I've created the first class, called "Song", which contains all information of the song.
* from that class, it'll be connected to a mediaplayer, which will play the song.
* the class will have methods to get metadata.
* I've also found out how to use the absolute path file instead of a local file.


05-13-17:
* The song class seems to be finished.
-- it's able to retrieve metadata
-- it uses the audio's filepath as a parameter.
-- it can be connected to QMediaPlayer to be played.
* I've created the initial scanner for audio files.
* I'm still unsure how I want input the paths of music
-- I could just manually search through all the user's files.
----> this would take a lot of computer power and would slow down performance.
-- I could ask the user to input the possible paths for music files 
----> this would be the easiest but least pleasant way for the user.
-- I could create a simple GUI to ask the user for possible paths.
----> this would be the hardest but would make it easier for the user.
* I'm planning to design the first screen that would display the avaliable music by the end of this week.

